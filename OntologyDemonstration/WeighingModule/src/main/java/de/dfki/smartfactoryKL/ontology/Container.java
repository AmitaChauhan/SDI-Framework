package de.dfki.smartfactoryKL.ontology;

import org.protege.owl.codegeneration.WrappedIndividual;
import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

import java.util.Collection;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: Container <br>
 * @version generated on Sat Mar 25 23:36:08 CET 2017 by Utkarsh
 */

public interface Container extends WrappedIndividual {

    /* ***************************************************
     * Property http://www.semanticweb.org/ontologies/2017/1/WeighingModuleOntology1#getsDataFrom
     */

    /**
     * Gets all property values for the getsDataFrom property.<p>
     * 
     * @returns a collection of values for the getsDataFrom property.
     */
    Collection<? extends WrappedIndividual> getGetsDataFrom();

    /**
     * Checks if the class has a getsDataFrom property value.<p>
     * 
     * @return true if there is a getsDataFrom property value.
     */
    boolean hasGetsDataFrom();

    /**
     * Adds a getsDataFrom property value.<p>
     * 
     * @param newGetsDataFrom the getsDataFrom property value to be added
     */
    void addGetsDataFrom(WrappedIndividual newGetsDataFrom);

    /**
     * Removes a getsDataFrom property value.<p>
     * 
     * @param oldGetsDataFrom the getsDataFrom property value to be removed.
     */
    void removeGetsDataFrom(WrappedIndividual oldGetsDataFrom);


    /* ***************************************************
     * Property http://www.semanticweb.org/ontologies/2017/1/WeighingModuleOntology1#hasContainer
     */

    /**
     * Gets all property values for the hasContainer property.<p>
     * 
     * @returns a collection of values for the hasContainer property.
     */
    Collection<? extends WrappedIndividual> getHasContainer();

    /**
     * Checks if the class has a hasContainer property value.<p>
     * 
     * @return true if there is a hasContainer property value.
     */
    boolean hasHasContainer();

    /**
     * Adds a hasContainer property value.<p>
     * 
     * @param newHasContainer the hasContainer property value to be added
     */
    void addHasContainer(WrappedIndividual newHasContainer);

    /**
     * Removes a hasContainer property value.<p>
     * 
     * @param oldHasContainer the hasContainer property value to be removed.
     */
    void removeHasContainer(WrappedIndividual oldHasContainer);


    /* ***************************************************
     * Property http://www.semanticweb.org/ontologies/2017/1/WeighingModuleOntology1#isKeptOn
     */

    /**
     * Gets all property values for the isKeptOn property.<p>
     * 
     * @returns a collection of values for the isKeptOn property.
     */
    Collection<? extends WrappedIndividual> getIsKeptOn();

    /**
     * Checks if the class has a isKeptOn property value.<p>
     * 
     * @return true if there is a isKeptOn property value.
     */
    boolean hasIsKeptOn();

    /**
     * Adds a isKeptOn property value.<p>
     * 
     * @param newIsKeptOn the isKeptOn property value to be added
     */
    void addIsKeptOn(WrappedIndividual newIsKeptOn);

    /**
     * Removes a isKeptOn property value.<p>
     * 
     * @param oldIsKeptOn the isKeptOn property value to be removed.
     */
    void removeIsKeptOn(WrappedIndividual oldIsKeptOn);


    /* ***************************************************
     * Property http://www.semanticweb.org/ontologies/2017/1/WeighingModuleOntology1#providesDataTo
     */

    /**
     * Gets all property values for the providesDataTo property.<p>
     * 
     * @returns a collection of values for the providesDataTo property.
     */
    Collection<? extends WrappedIndividual> getProvidesDataTo();

    /**
     * Checks if the class has a providesDataTo property value.<p>
     * 
     * @return true if there is a providesDataTo property value.
     */
    boolean hasProvidesDataTo();

    /**
     * Adds a providesDataTo property value.<p>
     * 
     * @param newProvidesDataTo the providesDataTo property value to be added
     */
    void addProvidesDataTo(WrappedIndividual newProvidesDataTo);

    /**
     * Removes a providesDataTo property value.<p>
     * 
     * @param oldProvidesDataTo the providesDataTo property value to be removed.
     */
    void removeProvidesDataTo(WrappedIndividual oldProvidesDataTo);


    /* ***************************************************
     * Property http://www.semanticweb.org/ontologies/2017/1/WeighingModuleOntology1#Breadth
     */

    /**
     * Gets all property values for the Breadth property.<p>
     * 
     * @returns a collection of values for the Breadth property.
     */
    Collection<? extends Object> getBreadth();

    /**
     * Checks if the class has a Breadth property value.<p>
     * 
     * @return true if there is a Breadth property value.
     */
    boolean hasBreadth();

    /**
     * Adds a Breadth property value.<p>
     * 
     * @param newBreadth the Breadth property value to be added
     */
    void addBreadth(Object newBreadth);

    /**
     * Removes a Breadth property value.<p>
     * 
     * @param oldBreadth the Breadth property value to be removed.
     */
    void removeBreadth(Object oldBreadth);



    /* ***************************************************
     * Property http://www.semanticweb.org/ontologies/2017/1/WeighingModuleOntology1#Height
     */

    /**
     * Gets all property values for the Height property.<p>
     * 
     * @returns a collection of values for the Height property.
     */
    Collection<? extends Object> getHeight();

    /**
     * Checks if the class has a Height property value.<p>
     * 
     * @return true if there is a Height property value.
     */
    boolean hasHeight();

    /**
     * Adds a Height property value.<p>
     * 
     * @param newHeight the Height property value to be added
     */
    void addHeight(Object newHeight);

    /**
     * Removes a Height property value.<p>
     * 
     * @param oldHeight the Height property value to be removed.
     */
    void removeHeight(Object oldHeight);



    /* ***************************************************
     * Property http://www.semanticweb.org/ontologies/2017/1/WeighingModuleOntology1#Length
     */

    /**
     * Gets all property values for the Length property.<p>
     * 
     * @returns a collection of values for the Length property.
     */
    Collection<? extends Object> getLength();

    /**
     * Checks if the class has a Length property value.<p>
     * 
     * @return true if there is a Length property value.
     */
    boolean hasLength();

    /**
     * Adds a Length property value.<p>
     * 
     * @param newLength the Length property value to be added
     */
    void addLength(Object newLength);

    /**
     * Removes a Length property value.<p>
     * 
     * @param oldLength the Length property value to be removed.
     */
    void removeLength(Object oldLength);



    /* ***************************************************
     * Property http://www.semanticweb.org/ontologies/2017/1/WeighingModuleOntology1#Total_number_of_parts
     */

    /**
     * Gets all property values for the Total_number_of_parts property.<p>
     *
     * @returns a collection of values for the Total_number_of_parts property.
     */
    Collection<? extends Object> getTotal_number_of_parts();

    /**
     * Checks if the class has a Total_number_of_parts property value.<p>
     *
     * @return true if there is a Total_number_of_parts property value.
     */
    boolean hasTotal_number_of_parts();

    /**
     * Adds a Total_number_of_parts property value.<p>
     *
     * @param newTotal_number_of_parts the Total_number_of_parts property value to be added
     */
    void addTotal_number_of_parts(Object newTotal_number_of_parts);

    /**
     * Removes a Total_number_of_parts property value.<p>
     *
     * @param oldTotal_number_of_parts the Total_number_of_parts property value to be removed.
     */
    void removeTotal_number_of_parts(Object oldTotal_number_of_parts);



    /* ***************************************************
     * Property http://www.semanticweb.org/ontologies/2017/1/WeighingModuleOntology1#Weight_of_box
     */

    /**
     * Gets all property values for the Weight_of_box property.<p>
     *
     * @returns a collection of values for the Weight_of_box property.
     */
    Collection<? extends Object> getWeight_of_box();

    /**
     * Checks if the class has a Weight_of_box property value.<p>
     *
     * @return true if there is a Weight_of_box property value.
     */
    boolean hasWeight_of_box();

    /**
     * Adds a Weight_of_box property value.<p>
     *
     * @param newWeight_of_box the Weight_of_box property value to be added
     */
    void addWeight_of_box(Object newWeight_of_box);

    /**
     * Removes a Weight_of_box property value.<p>
     *
     * @param oldWeight_of_box the Weight_of_box property value to be removed.
     */
    void removeWeight_of_box(Object oldWeight_of_box);



    /* ***************************************************
     * Property http://www.semanticweb.org/ontologies/2017/1/WeighingModuleOntology1#x
     */

    /**
     * Gets all property values for the x property.<p>
     *
     * @returns a collection of values for the x property.
     */
    Collection<? extends Object> getX();

    /**
     * Checks if the class has a x property value.<p>
     *
     * @return true if there is a x property value.
     */
    boolean hasX();

    /**
     * Adds a x property value.<p>
     *
     * @param newX the x property value to be added
     */
    void addX(Object newX);

    /**
     * Removes a x property value.<p>
     *
     * @param oldX the x property value to be removed.
     */
    void removeX(Object oldX);



    /* ***************************************************
     * Property http://www.semanticweb.org/ontologies/2017/1/WeighingModuleOntology1#y
     */

    /**
     * Gets all property values for the y property.<p>
     *
     * @returns a collection of values for the y property.
     */
    Collection<? extends Object> getY();

    /**
     * Checks if the class has a y property value.<p>
     *
     * @return true if there is a y property value.
     */
    boolean hasY();

    /**
     * Adds a y property value.<p>
     *
     * @param newY the y property value to be added
     */
    void addY(Object newY);

    /**
     * Removes a y property value.<p>
     *
     * @param oldY the y property value to be removed.
     */
    void removeY(Object oldY);



    /* ***************************************************
     * Property http://www.semanticweb.org/ontologies/2017/1/WeighingModuleOntology1#z
     */

    /**
     * Gets all property values for the z property.<p>
     *
     * @returns a collection of values for the z property.
     */
    Collection<? extends Object> getZ();

    /**
     * Checks if the class has a z property value.<p>
     *
     * @return true if there is a z property value.
     */
    boolean hasZ();

    /**
     * Adds a z property value.<p>
     *
     * @param newZ the z property value to be added
     */
    void addZ(Object newZ);

    /**
     * Removes a z property value.<p>
     *
     * @param oldZ the z property value to be removed.
     */
    void removeZ(Object oldZ);



    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
